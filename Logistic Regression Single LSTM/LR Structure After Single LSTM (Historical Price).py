# -*- coding: utf-8 -*-
"""LR Historical Prices Only.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dC18Jb40Pt8yLRysxg-XV0-Y8if-cNO_
"""

pip install quandl

import quandl
from pandas import read_csv
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import statsmodels.api as sm
from sklearn.metrics import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error
from math import sqrt

# Getting the predicted datasets as training set
BTC_Historical_Price = pd.read_csv('/content/BTC Price Predictions.csv')

# Setting our API key
quandl.ApiConfig.api_key = 'PLbHumzEHFzBSiCbDCMo'

# Getting the test data 
BTC_test_data = quandl.get('BCHAIN/MKPRU', start_date = "2020-03-28", end_date = "2021-01-01")

# Remove the 'Date' index
BTC_test_data = BTC_test_data.reset_index(drop = True)
BTC_test_data.columns = ['Actual Price']
BTC_test_data

# predictors
X = BTC_Historical_Price

# response variable
y = BTC_test_data['Actual Price']

# fit the model
model = sm.OLS(y, X).fit()

# make predictions
predictions = model.predict(X)

plt.figure(figsize=(15, 8))
plt.plot(y, color='black', label='Real')
plt.plot(predictions, color='green', label='Historical Prices LR Model')
plt.title('Real vs Predicted BTC')
plt.xlabel('Days in Testing Period')
plt.ylabel('BTC Price $')
plt.legend()
plt.show()
plt.savefig('Historical Prices Only.jpg')

# Meassures
mse = mean_squared_error(y, predictions)

rmse = sqrt(mean_squared_error(y, predictions))

mape = np.round((mean_absolute_percentage_error(y, predictions) * 100), 2)

mae = mean_absolute_error(y, predictions)

print("Mean Square Error (MSE):", mse)
print("Root Mean Square Error (RMSE):", rmse)
print("Mean Absolute Error (MSE):", mae)
print(f'Mean Absolute Percentage Error (MAPE): {mape} %')